/*+**************************************************************************/
/***                                                                      ***/
/***   This file is distributed under a BSD license.                      ***/
/***   See LICENSE.txt for details.                                       ***/
/***                                                                      ***/
/**************************************************************************+*/

header
{
#include "wz4lib/poc_ops.hpp"
}
code
{
#include "wz4frlib/fr063_chaos.hpp"
#include "wz4frlib/wz4_demo2_ops.hpp"
#include "wz4frlib/wz4_mesh_ops.hpp"
#include "wz4frlib/wz4_mtrl2_ops.hpp"
#include "wz4lib/script.hpp" 
}

/**************************************************************************+*/

operator Wz4Render FR063_Water(Wz4Mtrl)
{
  column = 1;
  parameter
  {
    group "Water";
    int BowlCount (1..60000) = 10000;
    if(0) float BowlSize (0..1024) = 2;
    int DropCount (1..2000) = 500;
    float DropSize (0..1024) = 0.5;
    group "Pyhsics";
    float Gravity(-1024..1024 step 0.000001)   = -0.00005;
    float OuterForce(0..1       step 0.000001) = 0.0001;
    float InnerForce(0..1       step 0.0001)   = 0.01;
    float InteractRadius(0..1   step 0.0001)   = 0.1;
    float Friction(0..1         step 0.0001)   = 0.995;

    group "Render";
    action Reset(1);
    int LightEnv(0..15)=0;
    int Renderpass(-127..127);

    group "Animation Script"; overbox overlabel linenumber lines 5 string Script;
  }
  code
  {
    RNFR063_Water *node = new RNFR063_Water();
    node->ParaBase = node->Para = *para;
    node->Mtrl = in0; in0->AddRef();
    node->Init();
    out->RootNode = node;
    out->AddCode(cmd,para->Renderpass);
  }
  actions
  {
    if(code==1)
    {
      return 1;
    }
    return 0;
  }
}

/**************************************************************************+*/

operator Wz4Render FR063_MultiProgress()
{
  column = 1;
  parameter
  {
    int Cores "Cores (0=actual)"(0..64);
    anim float Animate (0..1);
    int Renderpass(-127..127);
    group "Animation Script"; overbox overlabel linenumber lines 5 string Script;
  }
  code
  {
    RNFR063_MultiProgress *node = new RNFR063_MultiProgress();    
    node->ParaBase = node->Para = *para;
/*
    node->Mtrl = in0; in0->AddRef();
    node->Init();
    */
    out->RootNode = node;
    out->AddCode(cmd,para->Renderpass);
  }
}

/**************************************************************************+*/
